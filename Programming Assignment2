makeCacheMatrix <- function(x = matrix()) { ## This function creates a special "matrix" object that can cache its inverse.

i <- NULL
set <- function(y) {
          x <<- y
          i <<- NULL
}
get <- function() x
setinverse <- function(inverse) i <<- inverse
getinverse <- function() i
list(set = set, get = get,
           setinverse = setinverse,
           getinverse = getinverse)
}
> cacheSolve <- function(x, ...) { 
          i <- x$getinverse()
          if(!is.null(i)) {
                 message("getting cached data")
                 return(i)
          }
          mat <- x$get()
          i <- solve(mata, ...)
          x$setinverse(i)
          i
}
